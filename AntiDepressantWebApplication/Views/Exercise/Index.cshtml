@using AntiDepressantWebApplication.Models

@{
    ViewBag.Title = "Exercise";
}

<style>

    .block-of-text {
       padding: 18px 14px;
       background: #f2f2f2;
       margin: 10px 0;
    }

    #locationPicker {
        display: inline-block;
    }

    button {
        outline: none !important;
    }

</style>

<h2>Exercise</h2>
<hr />

<div class="container">

    <div class="col-md-12 block-of-text">
        People who suffer from depression have a tendency to become more stationary. They withdraw from family and friends and turn down social events.
        They also tend to think and feel that they have lower energy level and dont feel like exercising. Their mind starts doing tricks on them and bring forward convincing excuses to stay home.
        <br />We would like to break this vicious cycle by introducing the excersie module. The simplest form of exercise is just regular walking and Health organizations have set the minimum of 8km(10,000 steps) per day
        to achieve a healthy lifestyle.
        <br />
        In the map below, your home location is center of the blue circle and the radius of this circle is 2km. If you are an inactive person we recommond to travel at least twice per day to edge of circle.
        After you reach your desired location just enter the location and press submit to mark your achievements on the map.
        <br />
        Remember this activity has a compound effect and is not gonna solve your problems overnight like going to gym once wouldnt make you a healthy person. Try to be consistent and have a faith in the system!
    </div>
    <div class="col-md-12" style="text-align: center">
        <div id="locationPicker" style="width: 100%; height: 300px;"></div>
    </div>
    <div class="col-md-12" style="text-align: center">
        <div class="row col-md-8 col-md-offset-2">
            <div class="col-md-3" style="text-align: right">
                <label for="checkIn">Check In</label>
            </div>
            <div class="col-md-6">
               <input type="text" class="form-control" style="max-width:100%" id="checkIn" />
            </div>
            <div class="col-md-3" style="text-align: left">
                <button id="checkInSubmit" class="btn btn-success" type="button">Submit</button>
            </div>

        </div>
    </div>

    <div>
        <hr>
    </div>
    
    <div class="col-md-12">
        <table class="table" id="exerciseList">
            <thead>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            @if (ViewBag.exercises != null)
            {
                var count = 1;
                <tbody id="exerciseListTbody">

                    @foreach (Exercise exercise in ViewBag.exercises)
                    {
                    <tr>
                            <td>@count</td>
                            <td>@exercise.Created.ToString("dd/MM/yyyy HH:MM:ss")</td>
                            <td class="locationPoints" data-location="@exercise.Location"></td>
                            <td class="locationDistancePoints" data-location="@exercise.Location"></td>
                            <td>
                                <a data-id="@exercise.Id" class="btn btn-danger location-delete-btn">Delete</a>
                            </td>
                    </tr>
                        count++;
                    }
                </tbody>
            }
        </table>
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");

    <script type="text/javascript" src='http://maps.googleapis.com/maps/api/js?libraries=geometry,places&key=AIzaSyAlyo5CZDnx3bjF_4LKIPWObvkKcwg5NN4'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-locationpicker/0.1.12/locationpicker.jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-easy-loading@1.3.0/dist/jquery.loading.min.js"></script>


    <script>
        var geocoder = new google.maps.Geocoder;
        var directionsService = new google.maps.DirectionsService();
        const userLocation = {
           latitude: @(ViewBag.latitude  ),
           longitude: @(ViewBag.longitude )
        }

        const userPoint = new google.maps.LatLng(userLocation.latitude, userLocation.longitude);
        let map;
        const locationConfig = {
            location: {
                latitude: @(ViewBag.latitude),
                longitude: @(ViewBag.longitude)
            },
            radius: 2000,
            zoom: 12,
            enableAutocomplete: true,
            enableAutocompleteBlur: true,
            inputBinding: {
                locationNameInput: $('#checkIn')
            },
        }

        function geocodeLatLng(input, geocoder) {
            geocoder = geocoder ||  new google.maps.Geocoder;
            return new Promise((resolve, reject) => {
                var latlngStr = input.split(',', 2);
                var latlng = { lat: parseFloat(latlngStr[0]), lng: parseFloat(latlngStr[1]) };
                geocoder.geocode({ 'location': latlng }, function (results, status) {
                    if (status === 'OK') {
                        if (results[0]) {
                            console.log('resolved');
                            resolve(results[0]);
                        }

                        else {
                            reject('No results found');
                        }
                    }
                    else if (status === "OVER_QUERY_LIMIT") {

                        setTimeout(() => {
                            resolve(geocodeLatLng(input, geocoder))
                        }, 1000)

                    }

                    else {
                        reject('Geocoder failed due to: ' + status);
                    }
                });


            })
        }

        function calcDistance(p1, p2) {
          return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);
        }

        $(document).ready(function () {
            $('#locationPicker').locationpicker(locationConfig);
            map = $('#locationPicker').locationpicker('map')

            $('form input').keydown(function (event) {
                if (event.keyCode == 13) {
                    event.preventDefault();
                    return false;
                }
            });

            $('#checkInSubmit').click(() => {
                const location = $('#locationPicker').locationpicker('location');
                const { latitude, longitude, name, radius } = location;
                $('body').loading({});

                $.ajax('/Exercise/add', {
                    method: 'POST',
                    data: {
                        location: `${latitude},${longitude}`
                    },
                    success: () => {
                        window.location.reload();
                        //alert('Successfully added!');
                        $('body').loading('stop');
                    },

                    error: err => {
                        console.log(err);
                        $('body').loading('stop');
                        alert('Failed to add');
                    }
                })

            })

         $('.location-delete-btn').click(e => {
                const id = $(e.target).data('id');
                console.log(id);

                $.ajax('/Exercise/delete/'+id, {
                    method: 'POST',
                    success: () => {
                        window.location.reload();
                        $('body').loading('stop');
                    },

                    error: err => {
                        console.log(err);
                        $('body').loading('stop');
                        alert('Failed to delete');
                    }
                })

          })

            var infowindow = new google.maps.InfoWindow({});
            $.each($('.locationPoints'), (index, each) => {
                const location = $(each).data('location');
                console.log(map);
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(location.split(',')[0], location.split(',')[1]),
                    map: map.map,
                    icon: {
                        url: 'https://maps.google.com/mapfiles/kml/shapes/flag.png',
                        scaledSize: new google.maps.Size(30, 30)
                    }
                });

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(`${i+1}`);
                        infowindow.open(map, marker);
                    }
                })(marker, index));

                geocodeLatLng(location, geocoder).then(locationInformation => {
                    console.log('after resolve');
                    $(each).text(locationInformation.formatted_address)
                }).catch(err => alert(err));

            });

             $.each($('.locationDistancePoints'), (index, each) => {
                 const location = $(each).data('location');
                 const currentPoint = new google.maps.LatLng(location.split(',')[0], location.split(',')[1]);
                 const distance = calcDistance(currentPoint, userPoint);
                 $(each).text(distance + ' Km');
              });


        });




    </script>

}
